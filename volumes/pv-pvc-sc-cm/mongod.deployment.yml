# IMPORTANT: PersistentVolumes and MongoDB have problems on Windows.
# The YAML is being shown here for completeness (for Windows/Mac/Linux), but there's a known issue
# with Windows, Docker Desktop, and Kubernetes.

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: mongo-env
  name: mongo-env
data:
  MONGO_INITDB_ROOT_USERNAME: root
  MONGO_INITDB_ROOT_PASSWORD: admin1234
  MONGO_INITDB_DATABASE: newTestDB
  # MONGODB_DBNAME: sampleDB
  #NO - not a good idea to store a password in a ConfigMap (demo only). See the "secrets" folder for another demo of this.
  # MONGODB_USERNAME: webrole
  # MONGODB_PASSWORD: password
  # MONGODB_ROLE: readWrite
  #NO - not a good idea to store a password in a ConfigMap (demo only). See the "secrets" folder for another demo of this.
  # MONGODB_ROOT_PASSWORD: password
  # MONGODB_ROOT_ROLE: root
  # MONGODB_ROOT_USERNAME: dbadmin

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
# The reclaim policy applies to the persistent volumes not the storage class itself.
# pvs and pvcs that are created using that storage class will inherit the reclaim policy set here.
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
# Note: While a local storage PV works, going with a more durable solution (NFS, cloud option, etc.) is recommended
# Adding this for demo purposes to run on Docker Desktop Kubernetes since it only supports a single Node
# https://kubernetes.io/blog/2018/04/13/local-persistent-volumes-beta/
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  # volumeMode block feature gate enabled by default with 1.13+
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  # StorageClass has a reclaim policy default so it'll be "inherited" by the PV
  # persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    # IMPORTANT NOTE: Persistent Volumes and MongoDB with Kubernetes on Docker Desktop have been known to have issues
    # on Windows and can even be affected by versions of MacOS. Make sure you read through the
    # steps in the readme.md file since you may need to change the following value.
    path: /Users/llaudvi/private/tmp/data/db2
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          # command:
          #   - mongod
          #   - "--auth"
          resources: {}
          volumeMounts:
            - name: mongo-volume
              mountPath: /data/db
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_USERNAME
                  name: mongo-env
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_ROOT_PASSWORD
                  name: mongo-env
            # name is the key that container will use to get the values of env
            - name: MONGO_INITDB_DATABASE
              # valueFrom is useful if you wanted to get specific values in configMap
              # envFrom is useful if you wanted to map all values from configMap and access it thru your containers.
              valueFrom:
                configMapKeyRef:
                  key: MONGO_INITDB_DATABASE # key is what key should kubernetes would get in the configmap
                  name: mongo-env # name is the configMap name wherein should kuberentes should refer.
            # - name: MONGODB_PASSWORD
            #   valueFrom:
            #     configMapKeyRef:
            #       key: MONGODB_PASSWORD
            #       name: mongo-env
            # - name: MONGODB_ROLE
            #   valueFrom:
            #     configMapKeyRef:
            #       key: MONGODB_ROLE
            #       name: mongo-env
            # - name: MONGODB_ROOT_ROLE
            #   valueFrom:
            #     configMapKeyRef:
            #       key: MONGODB_ROOT_ROLE
            #       name: mongo-env
            # - name: MONGODB_USERNAME
            #   valueFrom:
            #     configMapKeyRef:
            #       key: MONGODB_USERNAME
            #       name: mongo-env
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc
